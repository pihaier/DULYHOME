name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # ÏΩîÎìú ÌíàÏßà Í≤ÄÏÇ¨
  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./nextjs_flexy

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: ./nextjs_flexy/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: TypeScript type check
      run: npm run type-check

    - name: Run ESLint
      run: npm run lint

    - name: Run tests
      run: npm run test:coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        directory: ./nextjs/coverage
        fail_ci_if_error: true
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  # ÎπåÎìú ÌÖåÏä§Ìä∏
  build:
    name: Build Test
    runs-on: ubuntu-latest
    needs: quality
    defaults:
      run:
        working-directory: ./nextjs_flexy

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: ./nextjs_flexy/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build
      env:
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}

    - name: Archive build artifacts
      if: matrix.node-version == '20.x'
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: |
          ./nextjs_flexy/.next
          ./nextjs_flexy/out
        retention-days: 7

  # Î≥¥Ïïà Í≤ÄÏÇ¨
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./nextjs_flexy

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: ./nextjs_flexy/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level=high

    - name: Check for vulnerabilities with audit fix
      run: npm audit fix --dry-run

  # ÏÑ±Îä• ÌÖåÏä§Ìä∏ (Lighthouse)
  lighthouse:
    name: Lighthouse Performance
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    defaults:
      run:
        working-directory: ./nextjs_flexy

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: ./nextjs_flexy/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build
      env:
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}

    - name: Start application
      run: npm start &
      env:
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}

    - name: Wait for app to be ready
      run: npx wait-on http://localhost:3000 --timeout 60000

    - name: Run Lighthouse CI
      run: npm run lighthouse
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

  # Supabase ÎßàÏù¥Í∑∏Î†àÏù¥ÏÖò Í≤ÄÏ¶ù (ÏÑ†ÌÉùÏ†Å)
  database:
    name: Database Migration Check
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && contains(github.event.pull_request.changed_files, 'supabase/migrations/')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Supabase CLI
      uses: supabase/setup-cli@v1
      with:
        version: latest

    - name: Validate migrations
      run: |
        cd supabase
        supabase db lint
        supabase db diff --schema=public

  # Î∞∞Ìè¨ (main Î∏åÎûúÏπòÏóêÏÑúÎßå)
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [quality, build, security]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./nextjs_flexy
        vercel-args: '--prod'

    - name: Notify deployment
      if: success()
      run: |
        echo "‚úÖ Deployment successful!"
        echo "üöÄ Production URL: https://your-domain.com"

  # Ïã§Ìå® ÏïåÎ¶º
  notify-failure:
    name: Notify on Failure
    runs-on: ubuntu-latest
    needs: [quality, build, security]
    if: failure()

    steps:
    - name: Notify failure
      run: |
        echo "‚ùå CI/CD Pipeline failed!"
        echo "üîç Check the logs for details."